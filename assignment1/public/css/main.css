/* Variables */

:root {
    --black: rgb(31, 35, 40);
    --light-black: rgb(99, 108, 118);
    --grey: rgb(208, 215, 222);
    --light-white: rgb(246, 248, 250);
    --link-color: var(--black);
    --blockquote-color: #666;

    --font-family: -apple-system,BlinkMacSystemFont,"Segoe UI","Noto Sans",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji";

}

/* Global Settings */

* {
    margin: 0;
    padding: 0;
}

/* a */
a {
    position: relative;
    text-decoration: none;
    color: inherit;
    font-style: italic;
}
a::after {
    content: '';
    position: absolute;
    width: 0;
    height: 2px;
    background: var(--link-color);
    transform: translateX(-50%);
    left: 50%;
    bottom: -3px;

    transition: all 0.2s ease-in-out 0s;
}
a:hover::after {
    width: 100%;
    transform: translateX(-50%);
}


/* blockquote */
blockquote {
    border-left: 4px solid #ddd;
    color: var(--blockquote-color);
}
blockquote > p {
    margin: 0 0 0 10px;
}

/* Code */
code {
    background-color: #eee;
    border-radius: 4px;
    padding: 2px 4px;
    font-family: var(--font-family);
    font-size: 100%;
}

/* ul */
ul {
    padding-left: 30px;
}

/* Body */

html, body, .camera {
    height: 100%;
    margin: 0;
    padding: 0;
    font-family: var(--font-family);
}
body {
    background-image: url('../pics/background-cut.png');
    background-size: cover;
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-position: center;
}

/* ----- Body Header ----- */

.header {
    position: relative;
    width: 100%;
    max-width: 1100px;
    margin: 0 auto;

    background-color: rgb(255, 255, 255);
    color: var(--black);

    display: flex;

    flex-direction: row;
    flex-wrap: wrap;
    justify-content: flex-start;
    align-items: center;

    border-bottom: 3px solid var(--grey);
}

.header-first {
    display: flex;

    width: 100%;
    height: 50px;

    flex-direction: row;
    flex-wrap: wrap;
    justify-content: flex-start;
    align-items: center;
}

.header-second {
    /* display: flex; */
    display: none;

    width: 100%;
    height: 40px;

    flex-direction: row;
    flex-wrap: wrap;
    justify-content: flex-start;
    align-items: center;
}

/* Footer */
.footer {
    position: relative;
    width: 100%;
    max-width: 1100px;
    margin: 0 auto;

    background-color: rgb(255, 255, 255);
    color: var(--black);
}
.footer > p {
    position: relative;
    text-align: center;
}
.footer > p:nth-child(1) {
    padding-top: 5px;
}
.footer > p:nth-child(2) {
    padding-bottom: 5px;
}

/* ----- Header First ----- */

.header-first > .menu {
    position: relative;
    height: 100%;
}

.header-first > .menu > img {
    position: relative;
    height: 40%;
    padding: 15px;
}

.header-first > .title {
    position: relative;
    font-size: 20px;
    font-weight: 600;
}
.header-first > .title::after {
    content: ' ~ ~ o(*￣▽￣*)o';
    animation: titleAnimation 2.5s infinite;
}
@keyframes titleAnimation {
    0%, 50% {
        content: ' ~ ~ o(*￣▽￣*)o';
    }
    51%, 100% {
        content: 'o(*￣▽￣*)o ~ ~';
    }
}

.header-first > .right {
    position: relative;
    height: 100%;
    margin-left: auto;
}

.header-first > .right > .avatar {
    position: relative;
    height: 50%;
    margin: 12px;

    border-radius: 50%;
    border: 1px solid var(--grey);
}

/* ----- Header Second ----- */

.header-second > .navigation {
    position: relative;
    height: 100%;
    
    padding: 0 20px;

    line-height: 30px;
}

.header-second > .navigation > a {
    position: relative;
    padding: 0 20px;
}

/* ----- Main ----- */

.main {
    position: relative;
    width: 100%;
    max-width: 1100px;

    margin: 0 auto;
    box-sizing: border-box;
    display: flex;
    flex-direction: row;
}

.main > * {
    padding: 30px;
}

.sidebar {
    position: sticky;
    top: 0;
    background-color: white;
    height: 1030px;
    width: 250px;

    border: 3px solid var(--grey);
    border-top: 0px;
}

.content {
    position: relative;
    /* margin-left: 20px; */
    background-color: white;

    border: 3px solid var(--grey);
    border-top: 0px;
    border-left: 0px;
}

/* ----- Main Sidebar AboutMe ----- */

.aboutme > .avatar {
    position: relative;
    width: 100%;
    border-radius: 50%;
    border: 1px solid var(--grey);
}

.aboutme > .name {
    position: relative;
    font-size: 25px;
    font-weight: 500;
    padding-top: 10px;
}

.aboutme > .nickname {
    position: relative;
    font-size: 20px;
    font-weight: 300;
    color: var(--light-black);
}

.aboutme > .note {
    position: relative;
    font-size: 17px;
    font-weight: 400;

    padding: 15px 0;
}

.aboutme > .links > * {
    position: relative;
    font-size: 15px;
    font-weight: 400;

    display: flex;
    padding: 3px 0;
}
.aboutme > .links p {
    position: relative;
    padding-left: 2px;;
}
.aboutme > .links img {
    position: relative;
    width: 20px;
    padding-right: 3px;
}
.aboutme .github > img {
    width: 18px;
    padding-right: 4px;
    padding-left: 1px;
} 

/* ----- Main Sidebar Memes ----- */

.sidebar > hr {
    position: relative;
    margin: 15px 0;
    border-color: var(--light-white);
}

.memes {
    display: block;
}
.memes > p {
    position: relative;
    font-size: 17px;
    font-weight: 500;

    padding-bottom: 15px;
}
.memes > img {
    position: relative;
    width: 32px;
    height: 32px;
}

/* ----- Main - Content ----- */

.content {
    position: relative;
    width: 75%;
}

.content > .introduction {
    position: relative;

    /* I found that `introduction` is useless. `Article` is a better way to introduce. */
    display: none;

    margin: 10px 10px;
    padding: 10px 20px;
    border: 1px solid var(--grey);
    border-radius: 8px;

    min-height: 100px;
}

.content > .articles {
    position: relative;

    display: flex;
    flex-direction: column;
}
.content > .articles > .article {
    position: relative;
    padding: 20px 30px;

    margin: 10px 10px;
    border: 1px solid var(--grey);
    border-radius: 8px;

    display: block;
}

.article > * {
    margin: 15px 0;
    line-height: 1.7;
}
.article > h2 {
    text-align: center;
}

/* Media */

body {
    min-width: 303px;
}

@media (min-width: 570px) and (max-width: 768px) {
    .trigger { display: none; }
    /* .memes { display: none; } */
    .main { flex-direction: column; }

    .body, .camera, .header, .main, .footer {
        width: 100%;
    }

    /* sidebar */
    .sidebar {
        position: relative;
        height: auto;
        width: auto;

        display: flex;
    }
    .sidebar > .aboutme > .avatar {
        width: 190px;
        height: 190px;
    }
    .sidebar hr {
        margin: 0 20px;
    }
    
    /* content */
    .content {
        height: auto;
        width: auto;
    }
    .articles > .assignment > img {
        top: 200px;
    }
    .articles > .assignment > table {
        top: 380px;
    }
}

@media (max-width: 570px) {
    .trigger { display: none; }
    /* .memes { display: none; } */
    .main { flex-direction: column; }

    .body, .camera, .header, .main, .footer {
        width: 100%;
    }

    .sidebar {
        position: relative;
        height: auto;
        width: auto;

        display: flex;
        flex-direction: column;
    }
    .sidebar > .aboutme {
        display: flex;
        flex-direction: column;
        align-items: center;
    }
    .sidebar > .aboutme > .avatar {
        width: 190px;
        height: 190px;
    }
    
    /* content */
    .content {
        height: auto;
        width: auto;
    }
    .articles > .assignment > img {
        top: 200px;
    }
    .articles > .assignment > table {
        top: 380px;
    }

    /* assignment */
    .articles > .assignment > img {
        position: relative;
        top: auto;
        left: auto;
    }
    .articles > .assignment > table {
        position: relative;
        top: auto;
        left: auto;
    }
}

/* Trigger & Animation !!! */

.trigger {
    width: 108px;
    height: 108px;

    position: fixed;
    top: 0;
    left: 0;
    z-index: 1;

    background-image: url('../pics/rabi1.png');
    background-size: cover;
    background-repeat: no-repeat;
    transition: background-image 1s;
}
.trigger::after {
    content: '可爱のErina';
    position: absolute;
    width: 100%;
    height: 20px;
    bottom: -20px;
    background-color: lightpink;
    text-align: center;
    transition: content 1s;
}
.trigger:hover {
    background-image: url('../pics/rabi2.png');
}
.trigger:hover::after {
    content: '可爱のCocoa';
}
.trigger:hover ~ .camera .header {
    /* animation: headerAnimation 10s infinite; */
    transform: rotateY(-30deg) translateZ(-500px) translateX(130px);
}
.trigger:hover ~ .camera .footer {
    transform: rotateY(17deg) translateZ(-250px) translateX(-500px);
}
.trigger:hover ~ .camera .main > .sidebar {
    /* animation: sidebarAnimation 10s infinite; */
    transform: rotateX(1deg) rotateY(10deg) translateZ(-100px) translateX(-200px);
}
.trigger:hover ~ .camera .main > .content {
    /* animation: contentAnimation 10s infinite; */
    transform: rotateX(1deg) rotateY(-10deg) translateZ(-100px) translateX(200px);
}
.trigger:hover ~ .camera .header > .header-first > .title::after {
    content: "o(≧▽≦)o 点到什么奇怪的开关啦！ w(ﾟДﾟ)w";
    animation: none;
}

.main, .camera {
    --perspective: 500px;
    --perspective-origin: 50% 0%;
    transform-style: preserve-3d;
    perspective: var(--perspective);
    perspective-origin: var(--perspective-origin);
}
.header, .footer {
    transform: rotateY(0) translateZ(0);
    transform-style: preserve-3d;
    transition: transform 5s;
}
.sidebar {
    transform: rotateY(0) translateZ(0);
    transform-style: preserve-3d;
    transition: transform 5s;
}
.content {
    transform: rotateY(0) translateZ(0);
    transform-style: preserve-3d;
    transition: transform 5s;
}

@keyframes headerAnimation {
    0% {
        transform: rotateY(0) translateZ(0);
    }
    50% {
        transform: rotateY(-30deg) translateZ(-500px) translateX(130px);
    }
}
@keyframes sidebarAnimation {
    0% {
        transform: rotateY(0) translateZ(0);
    }
    50% {
        transform: rotateX(1deg) rotateY(10deg) translateZ(-100px) translateX(-200px);
    }
}
@keyframes contentAnimation {
    0% {
        transform: rotateY(0) translateZ(0);
    }
    50% {
        transform: rotateX(1deg) rotateY(-10deg) translateZ(-100px) translateX(200px);
    }
}

/* 3D Cube */

/* Notes: The following scripts are copied from example codes in the lessons */
/* My improvement in this module is Texture Applyment & Position Animation */
.cube > .side {
    position: absolute;
    top: 50px;
    left: 50px;
    width: 100px;
    height: 100px;
    opacity: 1.0;
    display: flex;
    justify-content: center;
    align-items: center;
    color: aliceblue;
    font-size: 30px;
}
.cube > .side:nth-child(1) {
    background: rgb(229, 86, 101);
    transform: translateZ(50px);
}
.cube > .side:nth-child(2) {
    background: rgb(227, 227, 149);
    transform: translateX(-50px) rotateY(-90deg);
    background-image: url('../pics/grass-side.png');
    background-size: cover;
}
.cube > .side:nth-child(3) {
    background: rgb(122, 165, 215);
    transform: translateX(50px) rotateY(90deg);
    background-image: url('../pics/grass-side.png');
    background-size: cover;
}
.cube > .side:nth-child(4) {
    background: rgb(114, 188, 171);
    transform: translateZ(-50px) rotateY(180deg);
    background-image: url('../pics/grass-side.png');
    background-size: cover;
}
.cube > .side:nth-child(5) {
    background: rgb(216, 171, 209);
    transform: translateY(-50px) rotateX(90deg);
    background-image: url('../pics/grass-top.png');
    background-size: cover;
}
.cube > .side:nth-child(6) {
    background: rgb(231, 214, 190);
    transform:  translateY(50px) rotateX(-90deg);
    background-image: url('../pics/grass-bottom.png');
    background-size: cover;
}

.cube > .side:nth-child(1)::before {
    content: "";
    display: block;
    width: 100%;
    height: 100%;
    background-image: url('../pics/grass-side.png');
    background-size: cover;
    transform: rotate(-90deg);
}
.cube > .side:nth-child(2)::before {
    content: "";
    display: block;
    width: 100%;
    height: 100%;
    background-image: url('../pics/grass-side.png');
    background-size: cover;
    transform: rotate(-90deg);
}
.cube > .side:nth-child(3)::before {
    content: "";
    display: block;
    width: 100%;
    height: 100%;
    background-image: url('../pics/grass-side.png');
    background-size: cover;
    transform: rotate(-90deg);
}
.cube > .side:nth-child(4)::before {
    content: "";
    display: block;
    width: 100%;
    height: 100%;
    background-image: url('../pics/grass-side.png');
    background-size: cover;
    transform: rotate(-90deg);
}

/* Brilliant Me! An experienced programmer should use a wrapper instead of calculating complex transform matrices */
.cube-wrapper {
    position: fixed;
    width: 200px;
    height: 200px;
    top: 50%;
    left: 40%;
    transform: translate3d(-1000px, -300px, -1000px);
    transform-style: preserve-3d;
    transition: transform 3s ease-in-out 0.3s;
}
.trigger:hover ~ .camera .cube-wrapper {
    transform: translate3d(0, -300px, 100px);
}

.cube {
    position: relative;
    width: 200px;
    height: 200px;
    top: 50%;
    left: 40%;
    transform-style: preserve-3d;
    animation: ani3 4s infinite linear;
}
@keyframes ani3 {
    0% {
        transform: rotateY(0deg) rotateX(0deg);
    }
    50% {
        transform: rotateY(180deg) rotateX(180deg);
    }
    100% {
        transform: rotateY(360deg) rotateX(360deg);
    }
}

/* Memes Animation */

.memes {
    transform-style: preserve-3d;
    perspective: var(--perspective);
    perspective-origin: var(--perspective-origin);
}
.memes > img {
    transform: translate3d(0, 0, 0);
    transition: transform 3s ease-in-out 0.3s;
}
.trigger:hover ~ .camera .main .memes > img {
    transform: translate3d(50px, 0, 30px);
}
.trigger:hover ~ .camera .main .memes > img:nth-child(2n) {
    transform: translate3d(-5px, 0, 20px);
}
.trigger:hover ~ .camera .main .memes > img:nth-child(3n) {
    transform: translate3d(15px, 0, 15px);
}
.trigger:hover ~ .camera .main .memes > img:nth-child(3n+1) {
    transform: translate3d(110px, -10px, 40px);
}
.trigger:hover ~ .camera .main .memes > img:nth-child(4n) {
    transform: translate3d(2px, 3px, 17px);
}
.trigger:hover ~ .camera .main .memes > img:nth-child(5n) {
    transform: translate3d(30px, -5px, 20px);
}
.trigger:hover ~ .camera .main .memes > img:nth-child(6n) {
    transform: translate3d(1px, -2px, 23px);
}
.trigger:hover ~ .camera .main .memes > img:nth-child(7n) {
    transform: translate3d(-14px, 10px, 23px);
}
.trigger:hover ~ .camera .main .memes > img:nth-child(8n) {
    transform: translate3d(23px, -10px, 15px);
}
.trigger:hover ~ .camera .main .memes > img:nth-child(9n) {
    transform: translate3d(-3px, 20px, 40px);
}
.trigger:hover ~ .camera .main .memes > img:nth-child(10n) {
    transform: translate3d(-14px, 10px, 23px);
}
.trigger:hover ~ .camera .main .memes > img:nth-child(11n) {
    transform: translate3d(-5px, 0, 50px);
}
.trigger:hover ~ .camera .main .memes > img:nth-child(13n) {
    transform: translate3d(-14px, 10px, 23px);
}
.trigger:hover ~ .camera .main .memes > img:nth-child(17n) {
    transform: translate3d(-14px, -10px, 23px);
}
.trigger:hover ~ .camera .main .memes > img:nth-child(19n) {
    transform: translate3d(70px, -10px, 50px);
}
.trigger:hover ~ .camera .main .memes > img:nth-child(23n) {
    transform: translate3d(91px, 10px, 73px);
}
.trigger:hover ~ .camera .main .memes > img:nth-child(29n) {
    transform: translate3d(-14px, -10px, 23px);
}
/* Classic sequence, right? */

/* Assignemnt */
.content > .articles > .article.assignment {
    position: relative;

    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    justify-content: flex-start;
    align-content: flex-start;
}
.content > .articles > .article.assignment > * {
    margin: 5px 0;
}
.assignment > h2 {
    order: -2;
}
.assignment > blockquote {
    order: -2;
}
.assignment > img {
    position: absolute;
    top: 170px;
    left: 200px;
    
    width: 160px;
    height: 180px;
}
.assignment > ul img {
    width: 54px;
    height: 54px;
}
.assignment > table {
    position: absolute;
    top: 350px;
    left: 190px;
    width: 220px;
    height: 196px;
    border-collapse: collapse;
}
.assignment > table tr {
    border-bottom: 1px solid var(--grey);
    text-align: center;
}
.assignment > .flex-test {
    order: -1;
    align-self: flex-end;
}